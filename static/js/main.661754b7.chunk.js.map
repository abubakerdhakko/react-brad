{"version":3,"sources":["components/Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/addcontact.js","components/contacts/editcontact.js","components/layout/Header.js","components/pages/about.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","Response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","loader","onShowClick","name","e","onDeleteClick","delete","t0","_this2","_this$props$contact","email","phone","_this$state","className","react_loader_spinner_default","color","height","width","style","cursor","onClick","bind","float","react_router_dom","to","marginRight","Contacts","deleteContact","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","preventDefault","newContact","post","then","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","updContact","res","abrupt","match","params","put","Header","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","about","branding","App","Context_Provider","basename","process","react_router","exact","path","component","EditContact","About","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.661754b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload,\r\n                ...state.contacts]\r\n            }\r\n\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(\r\n                    contact =>\r\n                        contact.id === action.payload.id\r\n                            ? (contact = action.payload)\r\n                            : contact\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    };\r\n    async componentDidMount() {\r\n        // axios.get('https://jsonplaceholder.typicode.com/users')\r\n        //     .then(response => this.setState({contacts: response.data}))\r\n        //     // .then(json => console.log(json))\r\n        const Response = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({ contacts: Response.data })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\n//  import PropTypes from  'prop-types';\r\nimport { Consumer } from '../Context';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n    loader: false,\r\n  };\r\n\r\n  onShowClick = (name, e) => {\r\n\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    })\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    this.setState({ loader: true })\r\n\r\n    try {\r\n      await axios.delete(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`\r\n      );\r\n\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n\r\n    }\r\n    catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n\r\n    }\r\n    this.setState({ loader: false })\r\n  };\r\n  render() {\r\n\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo, loader } = this.state\r\n    return (\r\n\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n\r\n            <div className=\"container \">\r\n              {loader &&\r\n                <Loader\r\n                  type=\"Puff\"\r\n                  color=\"#000000\"\r\n                  height=\"100\"\r\n                  width=\"100\"\r\n                />}\r\n              <div className=\"flex-c\">\r\n                <div className=\"card\" style={{ width: 500 }}>\r\n                  <div className=\"card-body\">\r\n                    <h5 style={{ cursor: 'pointer' }} className=\"card-title fa fa-sort-down \" onClick={this.onShowClick.bind(this)} >{name}</h5>\r\n                    <i className=\"fa fa-times\" style={{ float: 'right', color: 'red', cursor: 'pointer' }}\r\n                      onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                    <Link to={`contact/edit/${id}`}>\r\n                      <i className=\"fas fa-pencil-alt\" style={{ float: 'right', marginRight: '1rem', color: 'red', cursor: 'pointer' }}></i>\r\n                    </Link>\r\n                    {showContactInfo ? (<ul className=\"list-group\">\r\n                      <li id=\"asd\" className=\"list-group-item\">\r\n                        Email: {email}\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        Phone: {phone}\r\n                      </li>\r\n                    </ul>) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n\r\n    )\r\n  }\r\n}\r\n// Contact.propTypes = {\r\n//   ontact: PropTypes.object.isRequired,\r\n//   deleteClickHandler: PropTypes.func.isRequired,\r\n// }\r\nexport default Contact\r\n","import React, { Component } from 'react'\r\nimport Contact from '../contacts/Contact';\r\nimport { Consumer } from \"../Context\"\r\n\r\nclass Contacts extends Component {\r\n  deleteContact = (id) => { };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\nexport default Contacts; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    axios.post('https://jsonplaceholder.typicode.com/users/', newContact).then(\r\n    Response =>\r\n    dispatch({ type: 'ADD_CONTACT', payload: Response.data }));\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount(){\r\n    const { id } = this.props.match.params;\r\n    \r\n\r\n    const res = await axios.get(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`\r\n      );\r\n  \r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n        name: contact.name,\r\n        email: contact.email,\r\n        phone: contact.phone        \r\n    });\r\n}\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    };\r\n\r\n    \r\n    const updContact = {\r\n        name,\r\n        email,\r\n        phone\r\n      };\r\n  \r\n      const { id } = this.props.match.params;\r\n  \r\n      const res = await axios.put(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`,\r\n        updContact\r\n      );\r\n  \r\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n  \r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n"," import React from \"react\";\r\n// import PropTypes from \"proptypes\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Header(props) {\r\n  return (\r\n   <div >\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <Link className=\"navbar-brand\" to=\"/\" >Navbar</Link>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n      <li className=\"nav-item active\">\r\n        <Link className=\"nav-link\" to=\"/contact/addcontact\">Add Contact<span className=\"sr-only\">(current)</span></Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n   </div>   \r\n  );\r\n}\r\nHeader.defaultProps = {\r\n  branding: \"My app\"\r\n};\r\n\r\n// Header.PropTypes = {\r\n//   branding: PropTypes.string.isRequired\r\n// };\r\n","import React from 'react'\r\n\r\nexport default function about() {\r\n    return (\r\n        <div>\r\n            <div className=\"display-4\">\r\n                <h1>about <span className=\"text-danger\">page</span></h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n// import logo from './logo.svg';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\n\r\nimport \"./App.css\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport AddContact from \"./components/contacts/addcontact\";\r\nimport EditContact from \"./components/contacts/editcontact\";\r\nimport Header from \"./components/layout/Header\";\r\nimport About from \"./components/pages/about\";\r\n// import CostumModel from \"./components/c/CustomModal\";\r\nimport { Provider } from \"./components/Context\"\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {/* <AddContact />\r\n           <CostumModel></CostumModel> }\r\n            <Contacts /> */}\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/contact/addcontact\" component={AddContact} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route exact path=\"/about\" component={About} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n// render(<App />, document.getElementById('root'));\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}